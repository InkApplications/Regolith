public final class regolith/processes/cron/CoroutineCronDaemon : regolith/processes/daemon/Daemon {
	public fun <init> (Ljava/util/List;Lkotlinx/datetime/Clock;Lkotlinx/datetime/TimeZone;Lregolith/processes/cron/CronJobCallbacks;)V
	public synthetic fun <init> (Ljava/util/List;Lkotlinx/datetime/Clock;Lkotlinx/datetime/TimeZone;Lregolith/processes/cron/CronJobCallbacks;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun onFailure (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startDaemon (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class regolith/processes/cron/CronJob {
	public abstract fun getSchedule ()Lregolith/processes/cron/Schedule;
	public abstract fun runCron (Lkotlinx/datetime/LocalDateTime;Lkotlinx/datetime/TimeZone;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class regolith/processes/cron/CronJobCallbacks {
	public abstract fun onCronJobError (Lregolith/processes/cron/CronJob;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class regolith/processes/cron/CronJobCallbacks$DefaultImpls {
	public static fun onCronJobError (Lregolith/processes/cron/CronJobCallbacks;Lregolith/processes/cron/CronJob;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class regolith/processes/cron/CronJobCallbacks$Empty : regolith/processes/cron/CronJobCallbacks {
	public static final field INSTANCE Lregolith/processes/cron/CronJobCallbacks$Empty;
	public fun onCronJobError (Lregolith/processes/cron/CronJob;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class regolith/processes/cron/CronJobCallbacks$PrintCallbacks : regolith/processes/cron/CronJobCallbacks {
	public static final field INSTANCE Lregolith/processes/cron/CronJobCallbacks$PrintCallbacks;
	public fun onCronJobError (Lregolith/processes/cron/CronJob;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class regolith/processes/cron/Schedule {
	public fun <init> ()V
	public fun <init> (Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
	public synthetic fun <init> (Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/Set;
	public final fun component2 ()Ljava/util/Set;
	public final fun component3 ()Ljava/util/Set;
	public final fun component4 ()Ljava/util/Set;
	public final fun copy (Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Lregolith/processes/cron/Schedule;
	public static synthetic fun copy$default (Lregolith/processes/cron/Schedule;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;ILjava/lang/Object;)Lregolith/processes/cron/Schedule;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDays ()Ljava/util/Set;
	public final fun getHours ()Ljava/util/Set;
	public final fun getMinutes ()Ljava/util/Set;
	public final fun getMonths ()Ljava/util/Set;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun withDays (Lkotlin/jvm/functions/Function1;)Lregolith/processes/cron/Schedule;
	public final fun withHours (Lkotlin/jvm/functions/Function1;)Lregolith/processes/cron/Schedule;
	public final fun withMinutes (Lkotlin/jvm/functions/Function1;)Lregolith/processes/cron/Schedule;
	public final fun withMonths (Lkotlin/jvm/functions/Function1;)Lregolith/processes/cron/Schedule;
}

public abstract interface class regolith/processes/daemon/Daemon : regolith/processes/daemon/DaemonFailureHandler {
	public abstract fun onFailure (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun startDaemon (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class regolith/processes/daemon/Daemon$DefaultImpls {
	public static fun onFailure (Lregolith/processes/daemon/Daemon;Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class regolith/processes/daemon/DaemonCallbacks {
	public abstract fun onDaemonError (Lregolith/processes/daemon/Daemon;Ljava/lang/Throwable;)V
	public abstract fun onDaemonRestart (Lregolith/processes/daemon/Daemon;Ljava/util/List;)V
	public abstract fun onDaemonStarted (Lregolith/processes/daemon/Daemon;)V
	public abstract fun onPanic (Lregolith/processes/daemon/Daemon;Ljava/lang/Throwable;)V
}

public final class regolith/processes/daemon/DaemonCallbacks$DefaultImpls {
	public static fun onDaemonError (Lregolith/processes/daemon/DaemonCallbacks;Lregolith/processes/daemon/Daemon;Ljava/lang/Throwable;)V
	public static fun onDaemonRestart (Lregolith/processes/daemon/DaemonCallbacks;Lregolith/processes/daemon/Daemon;Ljava/util/List;)V
	public static fun onDaemonStarted (Lregolith/processes/daemon/DaemonCallbacks;Lregolith/processes/daemon/Daemon;)V
	public static fun onPanic (Lregolith/processes/daemon/DaemonCallbacks;Lregolith/processes/daemon/Daemon;Ljava/lang/Throwable;)V
}

public final class regolith/processes/daemon/DaemonCallbacks$Empty : regolith/processes/daemon/DaemonCallbacks {
	public static final field INSTANCE Lregolith/processes/daemon/DaemonCallbacks$Empty;
	public fun onDaemonError (Lregolith/processes/daemon/Daemon;Ljava/lang/Throwable;)V
	public fun onDaemonRestart (Lregolith/processes/daemon/Daemon;Ljava/util/List;)V
	public fun onDaemonStarted (Lregolith/processes/daemon/Daemon;)V
	public fun onPanic (Lregolith/processes/daemon/Daemon;Ljava/lang/Throwable;)V
}

public final class regolith/processes/daemon/DaemonCallbacks$PrintCallbacks : regolith/processes/daemon/DaemonCallbacks {
	public static final field INSTANCE Lregolith/processes/daemon/DaemonCallbacks$PrintCallbacks;
	public fun onDaemonError (Lregolith/processes/daemon/Daemon;Ljava/lang/Throwable;)V
	public fun onDaemonRestart (Lregolith/processes/daemon/Daemon;Ljava/util/List;)V
	public fun onDaemonStarted (Lregolith/processes/daemon/Daemon;)V
	public fun onPanic (Lregolith/processes/daemon/Daemon;Ljava/lang/Throwable;)V
}

public abstract interface class regolith/processes/daemon/DaemonFailureHandler {
	public abstract fun onFailure (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class regolith/processes/daemon/DaemonInitializer : regolith/init/Initializer {
	public fun <init> (Ljava/util/List;Lregolith/processes/daemon/DaemonCallbacks;Lkotlinx/coroutines/CoroutineScope;ILkotlinx/datetime/Clock;)V
	public synthetic fun <init> (Ljava/util/List;Lregolith/processes/daemon/DaemonCallbacks;Lkotlinx/coroutines/CoroutineScope;ILkotlinx/datetime/Clock;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun initialize (Lregolith/init/TargetManager;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class regolith/processes/daemon/DaemonRunAttempt {
	public fun <init> (ILkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ljava/lang/Throwable;)V
	public final fun component1 ()I
	public final fun component2 ()Lkotlinx/datetime/Instant;
	public final fun component3 ()Lkotlinx/datetime/Instant;
	public final fun component4 ()Ljava/lang/Throwable;
	public final fun copy (ILkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ljava/lang/Throwable;)Lregolith/processes/daemon/DaemonRunAttempt;
	public static synthetic fun copy$default (Lregolith/processes/daemon/DaemonRunAttempt;ILkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ljava/lang/Throwable;ILjava/lang/Object;)Lregolith/processes/daemon/DaemonRunAttempt;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAttempt ()I
	public final fun getEnded ()Lkotlinx/datetime/Instant;
	public final fun getError ()Ljava/lang/Throwable;
	public final fun getRuntime-UwyO8pc ()J
	public final fun getStarted ()Lkotlinx/datetime/Instant;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class regolith/processes/daemon/DaemonRunAttemptKt {
	public static final fun getAverageRuntime (Ljava/util/List;)J
	public static final fun getFailuresPerMinute (Ljava/util/List;)F
}

public final class regolith/processes/daemon/DaemonTarget : regolith/init/InitTarget {
	public static final field INSTANCE Lregolith/processes/daemon/DaemonTarget;
}

public abstract interface class regolith/processes/daemon/FailureSignal {
}

public final class regolith/processes/daemon/FailureSignal$Die : regolith/processes/daemon/FailureSignal {
	public static final field INSTANCE Lregolith/processes/daemon/FailureSignal$Die;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class regolith/processes/daemon/FailureSignal$Panic : regolith/processes/daemon/FailureSignal {
	public static final field INSTANCE Lregolith/processes/daemon/FailureSignal$Panic;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class regolith/processes/daemon/FailureSignal$Restart : regolith/processes/daemon/FailureSignal {
	public static final field INSTANCE Lregolith/processes/daemon/FailureSignal$Restart;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class regolith/processes/daemon/MaxRunAttemptsReached : java/lang/IllegalStateException {
	public fun <init> ()V
}

